doPlot=false;%是否绘图
allTime=10;

%麦克风
micTimeSample=0.1;%采样时间

%喇叭
waveFreSample=44100; %采样频率
waveFreAv=18500;
waveFreOffset=0;
wavePlay(waveFreAv,waveFreOffset,allTime);

%规则参数
ruleThres=0.5;
ruleFreCenterWidth=1;

tic
while toc<allTime
    vector=waveGet(micTimeSample,waveFreAv,doPlot);
    
    freCenterIndex=ceil(length(vector)/2);
    downVec=vector(freCenterIndex+ruleFreCenterWidth:end)*;
    upVec=vector(1:freCenterIndex-ruleFreCenterWidth);
    downSum=sum();
    upSum=sum();
    
    if downSum>ruleThres || upSum>ruleThres
        if downSum>upSum
            disp('down');
        else
            disp('up');
        end
    else
        disp('steady');
    end
end


%% 播放声波并分析频谱，返回指定数量的频谱向量
function vectors=dopplerGet(vectorNum,doPlot)
%麦克风
micTimeSample=0.1;%采样时间

%喇叭
waveFreSample=44100; %采样频率
waveFreAv=18500;
waveFreOffset=200;
wavePlay(waveFreAv,waveFreOffset,micTimeSample*vectorNum*1.8+0.3);
pause(0.3);%等待扬声器稳定

%初始化储存频谱的矩阵
vectors=cell(vectorNum,1);
for i=1:vectorNum
    vectors{i}=waveGet(micTimeSample,waveFreAv,doPlot);
end
vectors=cat(1,vectors{:});
end

% %% 归一化特征向量,
% function vectorsOut=vectorNormalize(vectorsIn)
%     vectorsOut=vectorsIn/max(vectorsIn
% end